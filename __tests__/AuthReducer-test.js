import { 
    initialState,
    globalAuthUserTrigger,
    authOnboardRequest,
    authOnboardSuccess,
    authOnboardFailure,
    
    authCheckRequest,
    authCheckSuccess,
    authCheckFailure,
    authCheckIdle,
    authCheckReset,
    } from '../src/store/ducks/auth/reducer';

test('Testing globalAuthUser function successfully changes state', () => {
    expect(globalAuthUserTrigger(initialState, {
        payload: {
            data: {
                userId: "us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d",
                username: "testing123z",
                photo: {},
                privacyStatus: "PRIVATE",
                followedStatus: "SELF",
                followerStatus: "SELF",
                followedCount: 4,
                followerCount: 3,
                followCountsHidden: false,
                viewCountsHidden: false,
                commentsDisabled: false,
                likesDisabled: true,
                sharingDisabled: false,
                verificationHidden: false,
                postCount: 28,
                fullName: "Teg8",
                themeCode: "black.pink",
                bio: null,
                email: "qq@mailforspam.com",
                phoneNumber: null,
                languageCode: "en",
                signedUpAt: "2019-12-04T09:42:52.402823Z",
                postViewedByCount: 13,
                blockedStatus: "SELF",
                blockerStatus: "SELF",
                stories : {},
                directChat: null,
            }
        },
    })).toMatchObject({
        user: {
            userId: "us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d",
            username: "testing123z",
            photo: {},
            privacyStatus: "PRIVATE",
            followedStatus: "SELF",
            followerStatus: "SELF",
            followedCount: 4,
            followerCount: 3,
            followCountsHidden: false,
            viewCountsHidden: false,
            commentsDisabled: false,
            likesDisabled: true,
            sharingDisabled: false,
            verificationHidden: false,
            postCount: 28,
            fullName: "Teg8",
            themeCode: "black.pink",
            bio: null,
            email: "qq@mailforspam.com",
            phoneNumber: null,
            languageCode: "en",
            signedUpAt: "2019-12-04T09:42:52.402823Z",
            postViewedByCount: 13,
            blockedStatus: "SELF",
            blockerStatus: "SELF",
            stories : {},
            directChat: null,
        },
        authOnboard: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authCheck: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authSignin: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authSignup: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authSignupResend: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authSignupConfirm: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authForgot: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authForgotConfirm: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authFacebook: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authGoogle: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
        authSignout: {
        data: [],
        status: 'idle',
        error: {},
        message: {},
        payload: {},
        nextRoute: null,
        },
    });
});

    // test('authOnboardRequest', () => {
    //     expect(authOnboardRequest(initialState, {
    //         payload: {
    //             username: "bmm",
    //             fullName: "BMBMBM", 
    //         }
    //     })).toMatchObject({
    //         user: {},

    //         authOnboard: {
    //         data: [],
    //         status: 'loading',
    //         error: {},
    //         message: {},
    //         payload: {
    //             username: "bmm",
    //             fullName: "BMBMBM",
    //         },
    //         nextRoute: null,
    //         },
    //         authCheck: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignin: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignup: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignupResend: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignupConfirm: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authForgot: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authForgotConfirm: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authFacebook: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authGoogle: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignout: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         }});
    // });

    // test('authOnboardSuccess', () => {
    //     expect(authOnboardSuccess(initialState, {
    //         payload: {
    //             message: {
    //                 code: "GENERIC",
    //                 text: "Successfully created profile",
    //                 nativeError: "",
    //             },
    //             data: {
    //                 userId: "us-east-1:500c6f42-51ea-4d5f-b4e7-5b3d8f3f2920",
    //                 username: "bmm",
    //                 photo: {
    //                     url: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/native.jpg",
    //                     url64p: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/64p.jpg",
    //                     url480p: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/480p.jpg",
    //                     url1080p: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/1080p.jpg",
    //                     url4k: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/4K.jpg",
    //                     width: null,
    //                     height: null,
    //                     colors: null,
    //                 },
    //                 privacyStatus: "PUBLIC",
    //                 followedStatus: "SELF",
    //                 followerStatus: "SELF",
    //                 followedCount: 1,
    //                 followerCount: 0,
    //                 followCountsHidden: false,
    //                 viewCountsHidden: false,
    //                 commentsDisabled: false,
    //                 likesDisabled: false,
    //                 sharingDisabled: false,
    //                 verificationHidden: false,
    //                 postCount: 0,
    //                 fullName: "BMBMBM",
    //                 themeCode: "black.green",
    //                 bio: null,
    //                 email: "bm@mailforspam.com",
    //                 phoneNumber: null,
    //                 languageCode: "en",
    //                 signedUpAt: "2020-05-03T09:27:30.242264Z",
    //                 postViewedByCount: 0,
    //                 blockedStatus: "SELF",
    //                 blockerStatus: "SELF",
    //                 stories: {
    //                     items: [],
    //                     nextToken: null,
    //                 },
    //                 directChat: null,
    //             },
    //             nextRoute: "OnboardPhoto",
    //         }
    //     })).toMatchObject({
    //         /**
    //          *
    //          */
    //         user: {},
        
    //         /**
    //          *
    //          */
    //         authOnboard: {
    //         data: {
    //             userId: "us-east-1:500c6f42-51ea-4d5f-b4e7-5b3d8f3f2920",
    //             username: "bmm",
    //             photo: {
    //                 url: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/native.jpg",
    //                 url64p: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/64p.jpg",
    //                 url480p: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/480p.jpg",
    //                 url1080p: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/1080p.jpg",
    //                 url4k: "https://d3dclx0mrf3ube.cloudfront.net/placeholder-photos/black-white-example/4K.jpg",
    //                 width: null,
    //                 height: null,
    //                 colors: null,
    //             },
    //             privacyStatus: "PUBLIC",
    //             followedStatus: "SELF",
    //             followerStatus: "SELF",
    //             followedCount: 1,
    //             followerCount: 0,
    //             followCountsHidden: false,
    //             viewCountsHidden: false,
    //             commentsDisabled: false,
    //             likesDisabled: false,
    //             sharingDisabled: false,
    //             verificationHidden: false,
    //             postCount: 0,
    //             fullName: "BMBMBM",
    //             themeCode: "black.green",
    //             bio: null,
    //             email: "bm@mailforspam.com",
    //             phoneNumber: null,
    //             languageCode: "en",
    //             signedUpAt: "2020-05-03T09:27:30.242264Z",
    //             postViewedByCount: 0,
    //             blockedStatus: "SELF",
    //             blockerStatus: "SELF",
    //             stories: {
    //                 items: [],
    //                 nextToken: null,
    //             },
    //             directChat: null,
    //         },
    //         status: 'success',
    //         error: {},
    //         message: {
    //             code: "GENERIC",
    //             text: "Successfully created profile",
    //             nativeError: "",
    //         },
    //         payload: {},
    //         nextRoute: "OnboardPhoto",
    //         },
    //         authCheck: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignin: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignup: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignupResend: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignupConfirm: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authForgot: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authForgotConfirm: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authFacebook: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authGoogle: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //         authSignout: {
    //         data: [],
    //         status: 'idle',
    //         error: {},
    //         message: {},
    //         payload: {},
    //         nextRoute: null,
    //         },
    //     });
    // });

    // test('authOnboardFailure', () => {
    //     expect(authOnboardFailure(initialState, {
    //         payload: {
    //             message: {
    //                 code: "USER_TAKEN",
    //                 text: "Username you entered already reserved",
    //                 nativeError: "",
    //             },
    //             nextRoute: "Auth"
    //         }
    //     })).toMatchObject(
    //         {
    //             /**
    //              *
    //              */
    //             user: {},
            
    //             /**
    //              *
    //              */
    //             authOnboard: {
    //             data: [],
    //             status: 'failure',
    //             error: {},
    //             message: {
    //                 code: "USER_TAKEN",
    //                 text: "Username you entered already reserved",
    //                 nativeError: "",
    //                 },
    //             payload: {},
    //             nextRoute: 'Auth',
    //             },
    //             authCheck: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authSignin: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authSignup: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authSignupResend: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authSignupConfirm: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authForgot: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authForgotConfirm: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authFacebook: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authGoogle: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //             authSignout: {
    //             data: [],
    //             status: 'idle',
    //             error: {},
    //             message: {},
    //             payload: {},
    //             nextRoute: null,
    //             },
    //         }
    //     );
    // });

test('Testing authCheckRequest changes authCheck State', () => {
    expect(authCheckRequest(initialState, { payload: {} })).toMatchObject(
        {
            /**
             *
             */
            user: {},
          
            /**
             *
             */
            authOnboard: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authCheck: {
              data: [],
              status: 'loading',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authSignin: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authSignup: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authSignupResend: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authSignupConfirm: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authForgot: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authForgotConfirm: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authFacebook: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authGoogle: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
            authSignout: {
              data: [],
              status: 'idle',
              error: {},
              message: {},
              payload: {},
              nextRoute: null,
            },
          }
    );
});

test('Testing authCheckSuccess changes authCheck State', () => {
    expect(authCheckSuccess(initialState, { payload: {
        message: {
            code: "GENERIC",
            text: "Successfully authorized",
            nativeError: "",
        },
        data: {
            userId: "us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d",
            username: "testing123z",
            photo: {
                url: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/native.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=NeATcIvRsn2q7UF7KyK9pjgTN9G9T-jsnSjqNsAgYHVgULJI44pBuivMnKdFwAjekyGMW1YUhJuv7JgKuvZj5oASP4-T2BdiolNw68c5qpDhhqWyolDPnxdQtce6~DqPTrWy-Q5ELRi-jg5fxCPjfr3qu9~~ysSaT2BPpX8OtKlI-HS4HSKLYTZMdYxWSGK~-s7WYuncedxuYqThFfuOMc5fZekPfT0Ukk-HVCr2Q1Pke3BT-yJcCIrJPJ2CpZPCiBLsttvR0DLUvxqcdb5DUFB9fy-7TKwPMn94i70woG2BksCXd92uHPuRa6~1GZJgIb6GQCvTezMbuCyDQQOMng__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                url64p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/64p.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=LzwPUaSZDXbegSxpNtyjvaK7q0A70VtwRT9879V5rN~GzAuMfncrVP9ePVMGLsuTSN9HFmhL3oqxJHhJq1oCiRPvF9CsCCkVUKN1kIYvHuiVPyWm5sqP-VkuOKLBzmU8qZ8686X6FlTulKvAcJ5JK2HeyX~~Iu3pUHA0272lN2FRIrFJgBH~La~tSd~D0bjtnTRwTSRhToz211aLJxYvtXWRy0OPq3piLTFX7lPDx3DlGpcKcN1pGZ-iG~TuVE-7aD0jKAoix9RiS6yezPKV8L1aH56hf1yzOKXoeRbH3ToC2i5xcYxyTi~dK2Ay1uFU3caPf~Uu9jfCvXcMqWt3yw__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                url480p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/480p.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=gCWiWR5mxYnBzTK-UHe--vP1GcaYI~gVGBd3LihMqh1M8c16pPqMfxy3BTwGOf1CxOGy7sic~rEQ2SnXrrFAo-bvamqMANi~izYiLcAPsVnGKlzkd6KN-XjCVG6Hl8vUBNR0QXFKc6qE1sTEMqnkzkm5SOXv53gu6Uv7mL0ZNtgdnpc11pdHJVXwDQfRfePABhzi5CVWB7QuXgkTRzJneDjiRtlKXl37QSrzapM2QF4sYHRqCGnwRU-vIpIvKkp45YYBgYKj70X6I-t9BxKU64GTL71XhePaNdN~~wizkYeWO3YYrVrxYDmhAkCPmBj7q-rCRWl99c13lYCls3OMIQ__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                url1080p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/1080p.jpg?Method=GET&Method=HEAD&Expires=1588530517&Signature=dsDgIfV6yLaQRFE7ddmYLI67L-vzUqDlnwpp~3lHESNraBsKxCBmdcXkFhQSxY11yJ9l0jiAgbyNceOvGhTkuOvL~a9xTI4NgmUqXGE~KAb3oudy~0ewcARlHpKsScwvBpVdhv0AaVIqsMbYaBeK3Am0jFcQVBNap~acfvvzpegxtGPhVqGDhmU6BJl5vTMF941Y-jjsbcZbHN0iH1A1DewRyRZnIjre-qRj6Fahfgmqr9RmVxQppXGG56Q-~7h0DwFFoyP6lQ-uh2IYAjdiZXMN2hnoEY4WVcIK-tv8-RQXN2rA-6b07vd3W-K26qN7CGambBHWTb6L8xS0WO0vMw__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                url4k: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/4K.jpg?Method=GET&Method=HEAD&Expires=1588530517&Signature=LXdQMGvXSfLKt4BmUOU3s6bCOok8FqkqINB4uc3E58AboYZBkPDcbvM9vMVzoQoggT2yiFppLkMKVEjnozGmb7RV7u5F9-K3o0FoAAKbrn9GHL1l9zP9xr-0A8L2XQZTBVYprqzeW~7gylD2lkWwwJl7Rcxp-3k-O8c0WHyOKC77JQ7i7U0SKAeysnceknB4sOwDbvAr4NPUVZQfJ0SKends5A3g~3po48sqjZIjVEtJ0UxTa762ix~n8w5pcr7PJew5~ZP~KKLhK9N-u1MNneirILHnuCD6aCrBUFArbqM6Fw1Y6ZNt10NAZm2BjrmuHj9koPyd4blN6FeI6YzVbQ__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                width: null,
                height: null,
                colors: null,
            },
            privacyStatus: "PRIVATE",
            followedStatus: "SELF",
            followerStatus: "SELF",
            followedCount: 4,
            followerCount: 3,
            followCountsHidden: false,
            viewCountsHidden: false,
            commentsDisabled: false,
            likesDisabled: true,
            sharingDisabled: false,
            verificationHidden: false,
            postCount: 28,
            fullName: "Teg8",
            themeCode: "black.pink",
            bio: null,
            email: "qq@mailforspam.com",
            phoneNumber: null,
            languageCode: "en",
            signedUpAt: "2019-12-04T09:42:52.402823Z",
            postViewedByCount: 14,
            blockedStatus: "SELF",
            blockerStatus: "SELF",
            stories: {
                items: [],
                nextToken: null,
            },
            directChat: null,
        },
        nextRoute: "Root",
    }
})).toMatchObject({
    /**
     *
     */
    user: {
        userId: "us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d",
        username: "testing123z",
        photo: {
            url: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/native.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=NeATcIvRsn2q7UF7KyK9pjgTN9G9T-jsnSjqNsAgYHVgULJI44pBuivMnKdFwAjekyGMW1YUhJuv7JgKuvZj5oASP4-T2BdiolNw68c5qpDhhqWyolDPnxdQtce6~DqPTrWy-Q5ELRi-jg5fxCPjfr3qu9~~ysSaT2BPpX8OtKlI-HS4HSKLYTZMdYxWSGK~-s7WYuncedxuYqThFfuOMc5fZekPfT0Ukk-HVCr2Q1Pke3BT-yJcCIrJPJ2CpZPCiBLsttvR0DLUvxqcdb5DUFB9fy-7TKwPMn94i70woG2BksCXd92uHPuRa6~1GZJgIb6GQCvTezMbuCyDQQOMng__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
            url64p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/64p.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=LzwPUaSZDXbegSxpNtyjvaK7q0A70VtwRT9879V5rN~GzAuMfncrVP9ePVMGLsuTSN9HFmhL3oqxJHhJq1oCiRPvF9CsCCkVUKN1kIYvHuiVPyWm5sqP-VkuOKLBzmU8qZ8686X6FlTulKvAcJ5JK2HeyX~~Iu3pUHA0272lN2FRIrFJgBH~La~tSd~D0bjtnTRwTSRhToz211aLJxYvtXWRy0OPq3piLTFX7lPDx3DlGpcKcN1pGZ-iG~TuVE-7aD0jKAoix9RiS6yezPKV8L1aH56hf1yzOKXoeRbH3ToC2i5xcYxyTi~dK2Ay1uFU3caPf~Uu9jfCvXcMqWt3yw__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
            url480p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/480p.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=gCWiWR5mxYnBzTK-UHe--vP1GcaYI~gVGBd3LihMqh1M8c16pPqMfxy3BTwGOf1CxOGy7sic~rEQ2SnXrrFAo-bvamqMANi~izYiLcAPsVnGKlzkd6KN-XjCVG6Hl8vUBNR0QXFKc6qE1sTEMqnkzkm5SOXv53gu6Uv7mL0ZNtgdnpc11pdHJVXwDQfRfePABhzi5CVWB7QuXgkTRzJneDjiRtlKXl37QSrzapM2QF4sYHRqCGnwRU-vIpIvKkp45YYBgYKj70X6I-t9BxKU64GTL71XhePaNdN~~wizkYeWO3YYrVrxYDmhAkCPmBj7q-rCRWl99c13lYCls3OMIQ__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
            url1080p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/1080p.jpg?Method=GET&Method=HEAD&Expires=1588530517&Signature=dsDgIfV6yLaQRFE7ddmYLI67L-vzUqDlnwpp~3lHESNraBsKxCBmdcXkFhQSxY11yJ9l0jiAgbyNceOvGhTkuOvL~a9xTI4NgmUqXGE~KAb3oudy~0ewcARlHpKsScwvBpVdhv0AaVIqsMbYaBeK3Am0jFcQVBNap~acfvvzpegxtGPhVqGDhmU6BJl5vTMF941Y-jjsbcZbHN0iH1A1DewRyRZnIjre-qRj6Fahfgmqr9RmVxQppXGG56Q-~7h0DwFFoyP6lQ-uh2IYAjdiZXMN2hnoEY4WVcIK-tv8-RQXN2rA-6b07vd3W-K26qN7CGambBHWTb6L8xS0WO0vMw__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
            url4k: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/4K.jpg?Method=GET&Method=HEAD&Expires=1588530517&Signature=LXdQMGvXSfLKt4BmUOU3s6bCOok8FqkqINB4uc3E58AboYZBkPDcbvM9vMVzoQoggT2yiFppLkMKVEjnozGmb7RV7u5F9-K3o0FoAAKbrn9GHL1l9zP9xr-0A8L2XQZTBVYprqzeW~7gylD2lkWwwJl7Rcxp-3k-O8c0WHyOKC77JQ7i7U0SKAeysnceknB4sOwDbvAr4NPUVZQfJ0SKends5A3g~3po48sqjZIjVEtJ0UxTa762ix~n8w5pcr7PJew5~ZP~KKLhK9N-u1MNneirILHnuCD6aCrBUFArbqM6Fw1Y6ZNt10NAZm2BjrmuHj9koPyd4blN6FeI6YzVbQ__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
            width: null,
            height: null,
            colors: null,
        },
        privacyStatus: "PRIVATE",
        followedStatus: "SELF",
        followerStatus: "SELF",
        followedCount: 4,
        followerCount: 3,
        followCountsHidden: false,
        viewCountsHidden: false,
        commentsDisabled: false,
        likesDisabled: true,
        sharingDisabled: false,
        verificationHidden: false,
        postCount: 28,
        fullName: "Teg8",
        themeCode: "black.pink",
        bio: null,
        email: "qq@mailforspam.com",
        phoneNumber: null,
        languageCode: "en",
        signedUpAt: "2019-12-04T09:42:52.402823Z",
        postViewedByCount: 14,
        blockedStatus: "SELF",
        blockerStatus: "SELF",
        stories: {
            items: [],
            nextToken: null,
        },
        directChat: null,
    },
  
    /**
     *
     */
    authOnboard: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authCheck: {
        data: {
                userId: "us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d",
                username: "testing123z",
                photo: {
                    url: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/native.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=NeATcIvRsn2q7UF7KyK9pjgTN9G9T-jsnSjqNsAgYHVgULJI44pBuivMnKdFwAjekyGMW1YUhJuv7JgKuvZj5oASP4-T2BdiolNw68c5qpDhhqWyolDPnxdQtce6~DqPTrWy-Q5ELRi-jg5fxCPjfr3qu9~~ysSaT2BPpX8OtKlI-HS4HSKLYTZMdYxWSGK~-s7WYuncedxuYqThFfuOMc5fZekPfT0Ukk-HVCr2Q1Pke3BT-yJcCIrJPJ2CpZPCiBLsttvR0DLUvxqcdb5DUFB9fy-7TKwPMn94i70woG2BksCXd92uHPuRa6~1GZJgIb6GQCvTezMbuCyDQQOMng__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                    url64p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/64p.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=LzwPUaSZDXbegSxpNtyjvaK7q0A70VtwRT9879V5rN~GzAuMfncrVP9ePVMGLsuTSN9HFmhL3oqxJHhJq1oCiRPvF9CsCCkVUKN1kIYvHuiVPyWm5sqP-VkuOKLBzmU8qZ8686X6FlTulKvAcJ5JK2HeyX~~Iu3pUHA0272lN2FRIrFJgBH~La~tSd~D0bjtnTRwTSRhToz211aLJxYvtXWRy0OPq3piLTFX7lPDx3DlGpcKcN1pGZ-iG~TuVE-7aD0jKAoix9RiS6yezPKV8L1aH56hf1yzOKXoeRbH3ToC2i5xcYxyTi~dK2Ay1uFU3caPf~Uu9jfCvXcMqWt3yw__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                    url480p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/480p.jpg?Method=GET&Method=HEAD&Expires=1588530516&Signature=gCWiWR5mxYnBzTK-UHe--vP1GcaYI~gVGBd3LihMqh1M8c16pPqMfxy3BTwGOf1CxOGy7sic~rEQ2SnXrrFAo-bvamqMANi~izYiLcAPsVnGKlzkd6KN-XjCVG6Hl8vUBNR0QXFKc6qE1sTEMqnkzkm5SOXv53gu6Uv7mL0ZNtgdnpc11pdHJVXwDQfRfePABhzi5CVWB7QuXgkTRzJneDjiRtlKXl37QSrzapM2QF4sYHRqCGnwRU-vIpIvKkp45YYBgYKj70X6I-t9BxKU64GTL71XhePaNdN~~wizkYeWO3YYrVrxYDmhAkCPmBj7q-rCRWl99c13lYCls3OMIQ__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                    url1080p: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/1080p.jpg?Method=GET&Method=HEAD&Expires=1588530517&Signature=dsDgIfV6yLaQRFE7ddmYLI67L-vzUqDlnwpp~3lHESNraBsKxCBmdcXkFhQSxY11yJ9l0jiAgbyNceOvGhTkuOvL~a9xTI4NgmUqXGE~KAb3oudy~0ewcARlHpKsScwvBpVdhv0AaVIqsMbYaBeK3Am0jFcQVBNap~acfvvzpegxtGPhVqGDhmU6BJl5vTMF941Y-jjsbcZbHN0iH1A1DewRyRZnIjre-qRj6Fahfgmqr9RmVxQppXGG56Q-~7h0DwFFoyP6lQ-uh2IYAjdiZXMN2hnoEY4WVcIK-tv8-RQXN2rA-6b07vd3W-K26qN7CGambBHWTb6L8xS0WO0vMw__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                    url4k: "https://d1mx3y90ofnxy6.cloudfront.net/us-east-1:c9be4a03-3e92-42d7-ade2-13fe8ef2de0d/profile-photo/b2bee59f-2aec-4b18-b84f-3f7549fc4007/4K.jpg?Method=GET&Method=HEAD&Expires=1588530517&Signature=LXdQMGvXSfLKt4BmUOU3s6bCOok8FqkqINB4uc3E58AboYZBkPDcbvM9vMVzoQoggT2yiFppLkMKVEjnozGmb7RV7u5F9-K3o0FoAAKbrn9GHL1l9zP9xr-0A8L2XQZTBVYprqzeW~7gylD2lkWwwJl7Rcxp-3k-O8c0WHyOKC77JQ7i7U0SKAeysnceknB4sOwDbvAr4NPUVZQfJ0SKends5A3g~3po48sqjZIjVEtJ0UxTa762ix~n8w5pcr7PJew5~ZP~KKLhK9N-u1MNneirILHnuCD6aCrBUFArbqM6Fw1Y6ZNt10NAZm2BjrmuHj9koPyd4blN6FeI6YzVbQ__&Key-Pair-Id=APKAIW6XATZMO6HE34DA",
                    width: null,
                    height: null,
                    colors: null,
                },
                privacyStatus: "PRIVATE",
                followedStatus: "SELF",
                followerStatus: "SELF",
                followedCount: 4,
                followerCount: 3,
                followCountsHidden: false,
                viewCountsHidden: false,
                commentsDisabled: false,
                likesDisabled: true,
                sharingDisabled: false,
                verificationHidden: false,
                postCount: 28,
                fullName: "Teg8",
                themeCode: "black.pink",
                bio: null,
                email: "qq@mailforspam.com",
                phoneNumber: null,
                languageCode: "en",
                signedUpAt: "2019-12-04T09:42:52.402823Z",
                postViewedByCount: 14,
                blockedStatus: "SELF",
                blockerStatus: "SELF",
                stories: {
                    items: [],
                    nextToken: null,
                },
                directChat: null,
        },
        status: 'success',
        error: {},
        message: {
            code: "GENERIC",
            text: "Successfully authorized",
            nativeError: "",
        },
      payload: {},
      nextRoute: 'Root',
    },
    authSignin: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authSignup: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authSignupResend: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authSignupConfirm: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authForgot: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authForgotConfirm: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authFacebook: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authGoogle: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
    authSignout: {
      data: [],
      status: 'idle',
      error: {},
      message: {},
      payload: {},
      nextRoute: null,
    },
  });
});

test('Testing authCheckFailure changes authCheck State', () => {
    expect(authCheckFailure(initialState, { payload: {
        message: {
            code: "GENERIC",
            text: "Failed to authorize",
            nativeError: "",
        },
        nextRoute: 'Auth',
    } })).toMatchObject({
        /**
         *
         */
        user: {},
      
        /**
         *
         */
        authOnboard: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authCheck: {
          data: [],
          status: 'failure',
          error: {},
          message: {
            code: "GENERIC",
            text: "Failed to authorize",
            nativeError: "",
            },
          payload: {},
          nextRoute: 'Auth',
        },
        authSignin: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignup: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignupResend: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignupConfirm: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authForgot: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authForgotConfirm: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authFacebook: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authGoogle: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignout: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
      });
});

test('Testing authCheckIdle changes authCheck State', () => {
    expect(authCheckIdle(initialState, {})).toMatchObject({
        /**
         *
         */
        user: {},
      
        /**
         *
         */
        authOnboard: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authCheck: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignin: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignup: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignupResend: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignupConfirm: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authForgot: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authForgotConfirm: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authFacebook: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authGoogle: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
        authSignout: {
          data: [],
          status: 'idle',
          error: {},
          message: {},
          payload: {},
          nextRoute: null,
        },
      });
})
